"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[994],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),u=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=u(e.components);return o.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=u(n),m=r,b=d["".concat(c,".").concat(m)]||d[m]||p[m]||a;return n?o.createElement(b,i(i({ref:t},s),{},{components:n})):o.createElement(b,i({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var u=2;u<a;u++)i[u]=n[u];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2349:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>u});var o=n(7462),r=(n(7294),n(3905));const a={sidebar_position:2},i="Development contribution",l={unversionedId:"contribution/development_contribution",id:"contribution/development_contribution",title:"Development contribution",description:"Contributions to Negy in the form of bug fixes and feature additions are also welcome. Here are the basic steps to follow.",source:"@site/docs/contribution/development_contribution.md",sourceDirName:"contribution",slug:"/contribution/development_contribution",permalink:"/docs/contribution/development_contribution",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Join your node to our network",permalink:"/docs/contribution/join_your_node_to_our_network"},next:{title:"Donation",permalink:"/docs/contribution/donation"}},c={},u=[{value:"Create full Negy network on your local pc",id:"create-full-negy-network-on-your-local-pc",level:2},{value:"By using <code>docker-compose</code>",id:"by-using-docker-compose",level:3},{value:"By building source code",id:"by-building-source-code",level:3},{value:"Create a pull request",id:"create-a-pull-request",level:2}],s={toc:u};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"development-contribution"},"Development contribution"),(0,r.kt)("p",null,"Contributions to Negy in the form of bug fixes and feature additions are also welcome. Here are the basic steps to follow."),(0,r.kt)("h2",{id:"create-full-negy-network-on-your-local-pc"},"Create full Negy network on your local pc"),(0,r.kt)("h3",{id:"by-using-docker-compose"},"By using ",(0,r.kt)("inlineCode",{parentName:"h3"},"docker-compose")),(0,r.kt)("p",null,"With docker-compose, you can configure a Negy network for testing with a single command. Run the following command."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker-compose up --build\n")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"--build")," option ensures that the container is built up to date each time. The ",(0,r.kt)("inlineCode",{parentName:"p"},"--build")," option is not necessary if the purpose is simply to bring up the network."),(0,r.kt)("h3",{id:"by-building-source-code"},"By building source code"),(0,r.kt)("p",null,"To setup a full Negy network by building the source code, at least 5 terminal sessions are required. For short, you need to open 5 terminal windows or 5 sessions by tmux or any other tools."),(0,r.kt)("p",null,"In session 1, execute command below to launch the node pool."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cargo run -p negy-node-pool -- --port=3030\n")),(0,r.kt)("p",null,"In session 2, execute command below to launch the first node."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cargo run -p negy-node -- --port=3001\n")),(0,r.kt)("p",null,"In session 3, execute command below to launch the second node."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cargo run -p negy-node -- --port=3002\n")),(0,r.kt)("p",null,"In session 4, execute command below to launch the gateway."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cargo run -p negy-gateway -- --port=3000 --hops=2\n")),(0,r.kt)("p",null,"After confirming ",(0,r.kt)("inlineCode",{parentName:"p"},"INFO  negy_gateway > fetched 2 nodes")," log in gateway's session, you can try the network by the last session."),(0,r.kt)("p",null,"In session 5, try the network by the command below."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"curl https://example.com -x http://localhost:3000\n")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"The commands above will use port 3000 (gateway), 3001 (node), 3002 (node), and 3030 (node pool). Note that those ports are not already in use.")),(0,r.kt)("h2",{id:"create-a-pull-request"},"Create a pull request"),(0,r.kt)("p",null,"Add or modify the code and, if there are no network problems, create a pull request. The branch should be directed to the ",(0,r.kt)("inlineCode",{parentName:"p"},"dev")," branch, not the ",(0,r.kt)("inlineCode",{parentName:"p"},"main")," branch. The operation is to consolidate all changes once in the ",(0,r.kt)("inlineCode",{parentName:"p"},"dev")," branch, change the version and merge it into the ",(0,r.kt)("inlineCode",{parentName:"p"},"main")," branch."))}p.isMDXComponent=!0}}]);